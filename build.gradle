plugins {
	id 'org.springframework.boot' version '2.5.4'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id "com.diffplug.spotless" version "5.15.0"
}

group = 'br.com.template'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
	useJUnitPlatform()
}

spotless {
    encoding 'UTF-8'
	compileJava.dependsOn 'spotlessApply'
	format 'misc', {
		target '**/*.md', '**/.gitignore', '**/*.yml', '**/*.yaml', '**/*.json'
		targetExclude 'build/**'
		trimTrailingWhitespace()
		endWithNewline()
	}
	java {
		importOrderFile 'spotless.importorder'
		targetExclude 'build/generated-sources/**'
		removeUnusedImports()
		eclipse().configFile 'spotless.eclipse-fmt.xml'
        endWithNewline()
        trimTrailingWhitespace()
		custom 'Lambda fix', { it.replace('} )', '})').replace('} ,', '},') }
	}
	lineEndings 'UNIX'
}